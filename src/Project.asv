%Housekeeping
clc 
clear

% Domain Initialization
% Domain: -pi<X<pi   -pi<y<pi
Ax = -pi;
Ay = -pi;
Bx = pi;
By = pi;

% Starting by Discretizing FEB 5th PAGE 2 BOT
% L: number of points, h: interval, N: number of points
Lx = Bx-Ax
Ly = By-Ay
Nx = 50;
Ny = 50;
hx = Lx/(Nx-1)
hy = Ly/(Ny-1)


%Hello Ghosts Nodes
Startx = Ax-hx
Starty = Ay-hy
Endx = Bx+hx;
Endy = By+hy;




%Discretly 
m=1
for n = Startx:hx:Endx
    
    x(m) =n;
    m = m + 1;

end
m=1
for n = Starty:hy:Endy
    
    y(m) = n;
    m = m + 1;

end



%Fuck Yeah Boundary Conditions
% LB: Left Boundary
GLB = ((Bx-Ax)^2)*cos(((pi*Ax)/Bx))
FLB = Ax*((Bx-Ax)^2)
ULB = GLB + ((y-Ay)./(By-Ay)).*(FLB-GLB)

% Right Boundary Condition U = Constant
% Using the Upper or Lower Boundary Conidtions I can solve for the right side
% RB: Right Boundary
GRB = ((Bx-Bx)^2)*cos(((pi*Bx)/Bx))
FRB = Bx*((Bx-Bx)^2)

% Using Bottom BC U(x,ay) = GB(X) on bottom right corner but the whole right
% side is constant so the corner is the same as the rest
URB = GRB

% Verification Using Top BC U(x,by) = FB(X)
URBver = FRB

% Verified U(bx,y) = 0

% TB: Top Boundary
FTB = 





% It Begins 

% lamb = 

% for n = Ax:hx:Lx
%    
%     U(n) = ((n-h)-2n+(n+h))/(h^2) 
%     
%     
%     
%     
% end


%The Goal
% U = a + int(f(T)dt 0->t APRIL 17 PAGE 1 TOP
% For this problem a =  